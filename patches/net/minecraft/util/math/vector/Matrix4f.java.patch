--- a/net/minecraft/util/math/vector/Matrix4f.java
+++ b/net/minecraft/util/math/vector/Matrix4f.java
@@ -5,22 +5,22 @@
 
 public final class Matrix4f
 {
-    protected float m00;
-    protected float m01;
-    protected float m02;
-    protected float m03;
-    protected float m10;
-    protected float m11;
-    protected float m12;
-    protected float m13;
-    protected float m20;
-    protected float m21;
-    protected float m22;
-    protected float m23;
-    protected float m30;
-    protected float m31;
-    protected float m32;
-    protected float m33;
+    public float m00;
+    public float m01;
+    public float m02;
+    public float m03;
+    public float m10;
+    public float m11;
+    public float m12;
+    public float m13;
+    public float m20;
+    public float m21;
+    public float m22;
+    public float m23;
+    public float m30;
+    public float m31;
+    public float m32;
+    public float m33;
 
     public Matrix4f()
     {
@@ -631,4 +631,28 @@
         this.m13 = p_setTranslation_2_;
         this.m23 = p_setTranslation_3_;
     }
+    //Vivecraft - just for now
+    @Deprecated
+    public void read(FloatBuffer floatBufferIn) {
+    	this.m00 = floatBufferIn.get(bufferIndex(0, 0));
+    	this.m01 = floatBufferIn.get(bufferIndex(0, 1));
+    	this.m02 = floatBufferIn.get(bufferIndex(0, 2));
+    	this.m03 = floatBufferIn.get(bufferIndex(0, 3));
+    	this.m10 = floatBufferIn.get(bufferIndex(1, 0));
+    	this.m11 = floatBufferIn.get(bufferIndex(1, 1));
+    	this.m12 = floatBufferIn.get(bufferIndex(1, 2));
+    	this.m13 = floatBufferIn.get(bufferIndex(1, 3));
+    	this.m20 = floatBufferIn.get(bufferIndex(2, 0));
+    	this.m21 = floatBufferIn.get(bufferIndex(2, 1));
+    	this.m22 = floatBufferIn.get(bufferIndex(2, 2));
+    	this.m23 = floatBufferIn.get(bufferIndex(2, 3));
+    	this.m30 = floatBufferIn.get(bufferIndex(3, 0));
+    	this.m31 = floatBufferIn.get(bufferIndex(3, 1));
+    	this.m32 = floatBufferIn.get(bufferIndex(3, 2));
+    	this.m33 = floatBufferIn.get(bufferIndex(3, 3));
+    }
+    
+    public Vector3d translationComponent() {
+    	return new Vector3d(this.m30, this.m31, this.m32);
+    }
 }
